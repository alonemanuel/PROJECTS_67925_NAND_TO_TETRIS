// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way (in=true, sel=address[9..11], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);	
	
	Mux(a=false,b=load,sel=a,out=load0);
	Mux(a=false,b=load,sel=b,out=load1);
	Mux(a=false,b=load,sel=c,out=load2);
	Mux(a=false,b=load,sel=d,out=load3);
	Mux(a=false,b=load,sel=e,out=load4);
	Mux(a=false,b=load,sel=f,out=load5);
	Mux(a=false,b=load,sel=g,out=load6);
	Mux(a=false,b=load,sel=h,out=load7);

	
	RAM512 (in=in, load=load0, address=address[0..8], out=ram0);
	RAM512 (in=in, load=load2, address=address[0..8], out=ram2);
	RAM512 (in=in, load=load1, address=address[0..8], out=ram1);
	RAM512 (in=in, load=load3, address=address[0..8], out=ram3);
	RAM512 (in=in, load=load4, address=address[0..8], out=ram4);
	RAM512 (in=in, load=load5, address=address[0..8], out=ram5);
	RAM512 (in=in, load=load6, address=address[0..8], out=ram6);
	RAM512 (in=in, load=load7, address=address[0..8], out=ram7);
	
	Mux8Way16 (a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[9..11], out=out);
}